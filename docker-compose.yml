services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      conainer_name: chocobar-app
      restart: unless-stopped
      environment:
        - NODE_ENV=production
        - PORT=3000
      ports:
        - '3000:3000'
      networks:
        - chocobar-network
      depends_on:
        - postgres

  postgres:
    image: postgres:17-alpine3.21
    container_name: chocobar-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER: postgres
      - POSTGRES_PASSWORD: postgres
      - POSTGRES_DB: chocobar-postgres
    ports:
      - '5432:5432'
    volumes:
      - chocobar-postgres-data:/var/lib/postgresql/data
    networks:
      - chocobar-network

  nginx:
    image: nginx:1.25-alpine
    container_name: chocobar-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot-etc:/etc/letsencrypt
      - webroot:/var/www/html
    depends_on:
      - app
    networks:
      - chocobar-network

  certbot:
    image: certbot/certbot
    container_name: chocobar-certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - webroot:/var/www/html
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path /var/www/html --email abdomohamed2200066@gmail.com --agree-tos --no-eff-email --non-interactive --keep-until-expiring -d chocobar.api.tech

networks:
  chocobar-network:
    driver: bridge

volumes:
  chocobar-postgres-data:
  webroot:
  certbot-etc:
  certbot-var:
